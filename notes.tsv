2/11:
Leaving off with try to figure out how to integrate the python script into the snakemake and getting it to run and give the proper output

2/15:
first overlap script has been written but needs troubleshooting

2/16:
overlap file has been output, but it is only counting individual base pairs at a time and also need titles for the columns 
but need the contig sequence to be output as well. Could be in the same file (check for redundancy?)
now gives the full overlap, but need to have it listed as a contig 

3/12:
The overlap list should now be fixed, but now working on the conti list. 
The contig list only considers the sequence that actually extend the fragment and it lists the points of overlap but I can't get the sequence listed in the output to be correct, which is needed for further iterations over the contigs 

3/21:
it is only outputting the overlaps in the forwards direction
not handling the case when the sequencer read spans the entire query and extends on both sides 
the actual extending issue is now solved though 

3/23:
two different jobs running. The first was adding the condition for when the read overlaps the entire query
The second is restructuring the code to reduce the run time by only checking the contig when there is a final overlap file. Instead of checking for every combination of i and j and then only adding the final value

3/24:
The reconstruction worked but only seemed to reduce the runtime by 30-60min
The next step is going to be iterating through the overlap command until it is not adding anymore sequences 
This should be sequence by sequence so we are not continuing to compare the same sequences over and over
Create new files each time with the newly generated contigs to prevent this 

Working on how to generate the combined sequences, also need to update the GitHub

3/25:
See if removing sequences shorter than a certain number of bp does anything
Need to add a parameter for the minimum overlap length 
And need to add unit testing 

4/2:
Unit testing has been added for the initial_overlap.py script and now working on the iterative approach. 
Iterative approach needs to be finished and matched with the Snakemake too. 
Still need to add the parameter for the minimum overlap length 
Got the iteration working and passes the unit tests but there is an issue with generating a file with actual reads in it. Unit tests are working for the beginning but may need to add to the later pieces too

4/3: 
Unit tests have been added to the iterative approach and are now working 
Iterative appraoch now has an output! But is outputting the sequences with the most reads incorporated instead of the longest reads. 
Still need to add the parameter for the minimum overlap length
and need to align all of the files to the new query 
and update the GitHub

4/5: 
Fixed to output the longest read 

4/7:
code for finding all reads aligning to the query passed unit tests, now just integrating into the Snakemake
Fixed the titles of the output files 
Need to make sure the format of these files is correct 
Still need to add the parameter for the minimum overlap length
and update the GitHub
After running the long portion, changed the fasta file writing code so need to check that next

4/8:
Looks like identifying the contigs is taking forever to run, so might want to rework to save the reads in a new file and only test against the reads that we know allign to find the locations
Added a break statement and the small files run very quickly so terminated the previous job and rerunning now with the test reads file 
added absolute value to ensure lengths are not negative 

4/9:
the new method of identifying the reads overlapping the contig is very fast ~ 30 seconds
next places to optimize are the initial overlap function
adding a minimum overlap parameter 
then test on the full dataset!
updating Github

4/13:
fixed the initial overlap function so now runs in less than a minute
added the minimum overlap parameter
Now just need to test on the full set of reads, and if it works, update the github






 
